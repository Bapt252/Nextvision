# === NEXTVISION PRODUCTION DOCKERFILE ===
# Multi-stage build for optimized production image

# === BUILD STAGE ===
FROM python:3.11-slim as builder

# Arguments de build
ARG NEXTVISION_ENV=production
ENV NEXTVISION_ENV=${NEXTVISION_ENV}

# Installation des dépendances système pour build
RUN apt-get update && apt-get install -y \
    build-essential \
    gcc \
    g++ \
    libpq-dev \
    libffi-dev \
    libssl-dev \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Création utilisateur non-root
RUN groupadd -r nextvision && useradd -r -g nextvision nextvision

# Répertoire de travail
WORKDIR /app

# Copie et installation des dépendances Python
COPY requirements-production.txt .
RUN pip install --no-cache-dir --upgrade pip wheel setuptools && \
    pip install --no-cache-dir -r requirements-production.txt

# Copie du code source
COPY . .

# Compilation des assets (si nécessaire)
# RUN python -m compileall .

# === PRODUCTION STAGE ===
FROM python:3.11-slim as production

# Métadonnées
LABEL maintainer="NEXTEN Team <dev@nexten.fr>" \
      version="2.1.0" \
      description="Nextvision Production - Enterprise-grade matching API"

# Arguments et variables d'environnement
ARG NEXTVISION_ENV=production
ENV NEXTVISION_ENV=${NEXTVISION_ENV} \
    PYTHONPATH=/app \
    PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Installation des dépendances runtime uniquement
RUN apt-get update && apt-get install -y --no-install-recommends \
    libpq5 \
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get autoremove -y \
    && apt-get clean

# Création utilisateur et groupes
RUN groupadd -r nextvision && \
    useradd -r -g nextvision -d /app -s /bin/bash nextvision

# Création des répertoires nécessaires
RUN mkdir -p /app /var/log/nextvision /tmp/nextvision && \
    chown -R nextvision:nextvision /app /var/log/nextvision /tmp/nextvision

# Copie des dépendances depuis le stage builder
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Répertoire de travail
WORKDIR /app

# Copie du code source avec permissions correctes
COPY --chown=nextvision:nextvision . .

# Création des répertoires de logs avec permissions
RUN mkdir -p logs data && \
    chown -R nextvision:nextvision logs data

# Copie des scripts d'entrée
COPY --chown=nextvision:nextvision scripts/docker-entrypoint.sh /docker-entrypoint.sh
COPY --chown=nextvision:nextvision scripts/health-check.sh /health-check.sh
RUN chmod +x /docker-entrypoint.sh /health-check.sh

# Configuration sécurité
RUN chmod -R 755 /app && \
    chmod 644 /app/*.py && \
    find /app -name "*.py" -exec chmod 644 {} \;

# Switch vers utilisateur non-root
USER nextvision

# Ports exposés
EXPOSE 8000 8090

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD /health-check.sh

# Configuration des volumes
VOLUME ["/var/log/nextvision", "/tmp/nextvision"]

# Point d'entrée
ENTRYPOINT ["/docker-entrypoint.sh"]

# Commande par défaut
CMD ["python", "main_production.py"]

# === OPTIMISATIONS PRODUCTION ===

# Réduction taille image
RUN find /usr/local/lib/python3.11/site-packages -name "*.pyc" -delete && \
    find /usr/local/lib/python3.11/site-packages -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true

# Configuration Python optimisée
ENV PYTHONOPTIMIZE=2

# === SÉCURITÉ ===

# Désactiver shell pour l'utilisateur
RUN echo "nextvision:x:1000:1000:Nextvision User:/app:/bin/false" >> /etc/passwd

# Permissions restreintes
RUN chmod 750 /app && \
    chmod -R o-rwx /app

# === LABELS ADDITIONNELS ===
LABEL org.opencontainers.image.source="https://github.com/Bapt252/Nextvision" \
      org.opencontainers.image.documentation="https://github.com/Bapt252/Nextvision/blob/main/README.md" \
      org.opencontainers.image.licenses="MIT" \
      org.opencontainers.image.vendor="NEXTEN" \
      org.opencontainers.image.title="Nextvision" \
      org.opencontainers.image.description="Enterprise-grade AI matching platform" \
      nextvision.component="api" \
      nextvision.environment="production"

# === BUILD INFO ===
ARG BUILD_DATE
ARG VCS_REF
LABEL org.opencontainers.image.created="${BUILD_DATE}" \
      org.opencontainers.image.revision="${VCS_REF}"
