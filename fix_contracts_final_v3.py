#!/usr/bin/env python3
"""
üîß Correction finale types de contrats fran√ßais V3.0 - SANS STAGE
"""

# Lire le fichier des mod√®les
with open('nextvision/models/extended_matching_models_v3.py', 'r') as f:
    content = f.read()

# D√©finir la classe ContractType correcte
correct_contract_enum = '''class ContractType(Enum):
    """Types de contrats fran√ßais (questionnaire)"""
    CDI = "cdi"
    CDD = "cdd"
    FREELANCE = "freelance"
    INTERIM = "interim"'''

# Remplacer toutes les variantes existantes
import re

# Supprimer anciennes d√©finitions ContractType/ContractPreference
patterns_to_remove = [
    r'class ContractType\(Enum\):.*?(?=class|\Z)',
    r'class ContractPreference\(Enum\):.*?(?=class|\Z)',
]

for pattern in patterns_to_remove:
    content = re.sub(pattern, '', content, flags=re.DOTALL)

# Ins√©rer la bonne d√©finition apr√®s TransportMethod
insertion_point = content.find('class WorkModalityType(Enum):')
if insertion_point != -1:
    content = content[:insertion_point] + correct_contract_enum + '\n\n' + content[insertion_point:]
else:
    # Sinon ins√©rer apr√®s TransportMethod
    insertion_point = content.find('class MotivationType(Enum):')
    if insertion_point != -1:
        content = content[:insertion_point] + correct_contract_enum + '\n\n' + content[insertion_point:]

# Supprimer r√©f√©rences √† STAGE
content = content.replace('STAGE = "stage"', '')
content = content.replace(', STAGE', '')
content = content.replace('STAGE, ', '')

# Nettoyer lignes vides multiples
content = re.sub(r'\n\s*\n\s*\n', '\n\n', content)

# Sauvegarder
with open('nextvision/models/extended_matching_models_v3.py', 'w') as f:
    f.write(content)

print("‚úÖ Types de contrats fran√ßais corrig√©s (sans STAGE)!")
print("üá´üá∑ CDI, CDD, FREELANCE, INTERIM op√©rationnels")
